name: Deploy React Vite App to Server

on:
  push:
    branches:
      - chakra  # Trigger deployment when changes are pushed to the 'chakra' branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout Code
        uses: actions/checkout@v2

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'  # Adjust Node.js version as needed (e.g., '18' or '14')

      # Step 3: Set up SSH for secure connection to the server
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 400 ~/.ssh/id_rsa  # Set secure permissions for the private key
          ssh-keyscan -t rsa 103.209.145.218 >> ~/.ssh/known_hosts  # Add the server's public key to known_hosts

      # Step 4: Debug SSH connection (for troubleshooting)
      - name: Debug SSH Connection
        run: ssh -vvv -i ~/.ssh/id_rsa root@103.209.145.218 'echo "SSH connection successful"'

      # Step 5: Deploy to the server
      - name: Deploy to Server
        run: |
          ssh -i ~/.ssh/id_rsa root@103.209.145.218 'bash -s' << 'EOF'
          
          # Define the app and dist directory
          APP_DIR="/var/www/fota-frontend"
          DIST_DIR="$APP_DIR/dist"
          
          # Ensure the app directory exists and is up-to-date
          cd $APP_DIR
          
          # Fetch latest changes from the 'chakra' branch
          git fetch origin
          git reset --hard origin/chakra

          # Remove 'node_modules' and clean the app
          rm -rf node_modules

          # Install dependencies using 'npm ci' (more reliable for CI/CD)
          npm ci

          # Build the app
          npm run build

          # Ensure proper ownership and permissions for the 'dist' directory (for Nginx)
          chown -R www-data:www-data $DIST_DIR
          chmod -R 755 $DIST_DIR

          # Restart Nginx (only if necessary, comment out if not required)
          systemctl restart nginx || echo "Nginx not running or restart failed"

          EOF
